"use strict";function digitRunner(n){for(var e=n.childNodes,r=[],t=[],o=0;o<e.length;o++)r[o]=+e[o].innerHTML;for(var i=0;i<r.length;i++){var u=function(n,e){for(var r,t,o=(r=n)<(t=e)?9-(t-r)+1:r-t,i=[],u=0;u<e;u++)9<++o&&(o=0),i.push(o);return i}(r[i],7);t[i]=[];for(var s=0;s<u.length;s++)t[i].push(u[s])}for(var a=0,c=0;c<t.length;c++)a+=250,function(e,r,t,o){for(var n=0;n<t.length;n++)!function(n){setTimeout(function(){e[r].innerHTML=t[n]},o+50*n)}(n)}(e,c,t[c],a)}function RunRunner(){for(var n=document.querySelectorAll(".running"),e=0;e<n.length;e++)n[e].classList.add("hidden");for(var r=new IntersectionObserver(function(n){n.forEach(function(n){n.isIntersecting&&n.target.classList.contains("hidden")&&(n.target.classList.remove("hidden"),digitRunner(n.target))})},{root:null,rootMargin:"0px",threshold:.2}),t=document.querySelectorAll(".running"),o=0;o<n.length;o++)r.observe(t[o])}window.addEventListener("load",RunRunner,!1);
//# sourceMappingURL=runner.js.map